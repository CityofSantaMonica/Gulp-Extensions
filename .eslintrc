{
    "plugins": [
        "node",
        "promise"
    ],
    "extends": "./eslint-base.js",

    // Here we can define our own rules overriding the base rules
    "rules": {
        "max-len": [
            "error",
            120,
            2,
            {
                "ignoreUrls": true,
                "ignoreComments": false,
                "ignoreRegExpLiterals": true,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true
            }
        ],

        "eqeqeq": [
            "warn",
            "always",
            { null: "ignore" }
        ],

        "no-sequences": "warn",

        "vars-on-top": "warn",

        "no-empty": "warn",

        "arrow-parens": [ "warn", "always" ],

        "no-var": "warn",

        "prefer-arrow-callback": [
            "warn",
            {
                "allowNamedFunctions": false,
                "allowUnboundThis": true
            }
        ],

        "prefer-destructuring": [
            "warn",
            {
                "VariableDeclarator": {
                    "array": false,
                    "object": true
                },
                "AssignmentExpression": {
                    "array": true,
                    "object": false
                }
            },
            {
                "enforceForRenamedProperties": false
            }
        ],

        "prefer-rest-params": "warn",

        "prefer-template": "warn",

        "brace-style": [
            "warn",
            "stroustrup",
            { "allowSingleLine": true }
        ],

        "comma-dangle": [
            "warn",
            {
                "arrays": "always-multiline",
                "objects": "always-multiline",
                "imports": "always-multiline",
                "exports": "always-multiline",
                "functions": "always-multiline"
            }
        ],

        "function-paren-newline": [ "warn", "consistent" ],

        "indent": [
            "warn",
            4,
            {
                "SwitchCase": 1,
                "VariableDeclarator": 1,
                "outerIIFEBody": 1,
                // MemberExpression: null,
                "FunctionDeclaration": {
                    "parameters": 1,
                    "body": 1
                },
                "FunctionExpression": {
                    "parameters": 1,
                    "body": 1
                },
                "CallExpression": {
                    "arguments": 1
                },
                "ArrayExpression": 1,
                "ObjectExpression": 1,
                "ImportDeclaration": 1,
                "flatTernaryExpressions": false,
                // list derived from https://github.com/benjamn/ast-types/blob/HEAD/def/jsx.js
                "ignoredNodes": [ "JSXElement", "JSXElement > *", "JSXAttribute", "JSXIdentifier", "JSXNamespacedName", "JSXMemberExpression", "JSXSpreadAttribute", "JSXExpressionContainer", "JSXOpeningElement", "JSXClosingElement", "JSXFragment", "JSXOpeningFragment", "JSXClosingFragment", "JSXText", "JSXEmptyExpression", "JSXSpreadChild" ],
                "ignoreComments": false
            }
        ],

        "no-mixed-spaces-and-tabs": "warn",

        "no-nested-ternary": "warn",

        "linebreak-style": [ "warn", "unix" ],

        "semi": [ "warn", "always" ],

        "one-var-declaration-per-line": [ "warn", "always" ],

        "operator-linebreak": [
            "warn",
            "before",
            { "overrides": { "=": "none" } }
        ],

        "consistent-return": "warn",

        "no-shadow": "warn",

        "no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "args": "after-used",
                "ignoreRestSiblings": true
            }
        ],

        "no-use-before-define": [
            "warn",
            {
                "functions": true,
                "classes": true,
                "variables": true
            }
        ]
    }
}
